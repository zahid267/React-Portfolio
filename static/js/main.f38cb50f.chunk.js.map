{"version":3,"sources":["components/NavTabs.js","components/pages/Resume.js","components/pages/About.js","components/pages/Portfolio.js","components/pages/Contact.js","components/pages/utils/helpers.js","components/pages/Footer.js","components/PortfolioContainer.js","App.js","index.js"],"names":["NavTabs","currentPage","handlePageChange","className","href","onClick","Resume","download","About","src","alt","width","height","Portfolio","style","backgroundImage","window","open","title","Contact","useState","email","setEmail","userName","setUserName","message","setMessage","errorMessage","setErrorMessage","handleInputChange","e","target","inputType","name","inputValue","value","alert","onChange","type","placeholder","cols","rows","preventDefault","test","String","toLowerCase","validateEmail","Footer","PortfolioContainer","setCurrentPage","page","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f38cb50f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './pages/App.css';\r\n// Here we are using object destructuring assignment to pluck off our variables from the props object\r\n// We assign them to their own variable names\r\nfunction NavTabs({ currentPage, handlePageChange }) {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>{`Muhammad`}<span className=\"seo\">{`Zahid`}</span></h1>\r\n    <ul className=\"nav nav-tabs\">\r\n      \r\n      <li className=\"nav-item\">\r\n        <a\r\n          href=\"#about\"\r\n          onClick={() => handlePageChange('About')}\r\n          // Check to see if the currentPage is `About`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\r\n          className={currentPage === 'About' ? 'nav-link active' : 'nav-link'}\r\n        >\r\n          About me\r\n        </a>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <a\r\n          href=\"#portfolio\"\r\n          onClick={() => handlePageChange('Portfolio')}\r\n          // Check to see if the currentPage is `Portfolio`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\r\n          className={currentPage === 'Portfolio' ? 'nav-link active' : 'nav-link'}\r\n        >\r\n          Portfolio\r\n        </a>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <a\r\n          href=\"#contact\"\r\n          onClick={() => handlePageChange('Contact')}\r\n          // Check to see if the currentPage is `Contact`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\r\n          className={currentPage === 'Contact' ? 'nav-link active' : 'nav-link'}\r\n        >\r\n          Contact\r\n        </a>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <a\r\n          href=\"#resume\"\r\n          onClick={() => handlePageChange('Resume')}\r\n          // This is a conditional (ternary) operator that checks to see if the current page is \"Resume\"\r\n          // If it is, we set the current page to 'nav-link-active', otherwise we set it to 'nav-link'\r\n          className={currentPage === 'Resume' ? 'nav-link active' : 'nav-link'}\r\n        >\r\n          Resume\r\n        </a>\r\n      </li>\r\n    </ul>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default NavTabs;\r\n","import React from 'react';\r\n\r\nexport default function Resume() {\r\n  return (\r\n    <div>\r\n      <h1>Resume</h1>\r\n      <a href=\"./assets/ZAHIDRESUME.pdf\" download=\"resumeZahid\">Download the pdf</a>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\n\r\nexport default function About() {\r\n  const name = 'Muhammad Zahid';\r\n  return (\r\n    <div className=\"work\">\r\n      <h2>About Me</h2>\r\n                <div>\r\n                    <figure>\r\n                        <img src={'images/zahid_pic.jpg'} alt={name}  width={`200`} height={`200`} />\r\n                    </figure>\r\n                     <p>\r\n                        I have been a Programmer Analyst since 2002. I have worked with different languages, including Pick uniVerse database, PICK BASIC, RedBack (IBM’s U2 WebDE), Java, Javascript, Ajax, Perl, JSP, PCL, Visual Basic, Visual Basic .Net, ASP, VB Script, HTML, CSS and several others (see resume). I have developed business applications using several software languages and have worked with different Web applications. Some of the major types of application are Warehouse Management System, Freight Management System, Distribution Control, Copyright Courseware and Point of Sale (POS) software, e-commerce for university/college bookstore, University/College bookstore software and Mathematics learning tools. I have worked in manufacturing environment for several years as well.\r\n                     </p>\r\n                     <p>I have also developed server-side methods to fetch XML, Json or text data, from affiliated websites, in recent years. I have worked with credit card payment process as well.</p>\r\n                </div>\r\n\r\n                <div>\r\n                <h2>Work</h2><br /><br />\r\n                  <h3>Programmer Analyst</h3>\r\n                            <h4>Waterloo Information Systems Ltd., Waterloo, ON</h4>\r\n                            <h5>July 2002 – Present</h5>\r\n                                <br />\r\n                            <ul>\r\n                                <li>Develop web applications utilizing uniVerse database, PICK BASIC, JSP, java, Perl, javascript, jQuary, Ajax, jBoss, Wildfly, Canvas 2d, HTML, HTML5, DHTML, CSS, RedBack, U2 WebDe.</li>\r\n                                <li>Develop custom software using appropriate software language</li>\r\n                                <li>Develop new applications using Pick uniVerse and PICK BASIC</li>\r\n                                <li>Developed web methods to process credit card payment</li>\r\n                                <li>Developed applications to make LWP Requests to get XML, Json data from affiliated websites</li>\r\n                                <li>Created applications to retrieve prices, images and product availability from the affiliated sites</li>\r\n                                <li>Developed JSP code generation software using uniVerse database</li>\r\n                                <li>Maintain and modify existing software to fulfill customer requirements</li>\r\n                                <li>Develop new Web applications interacting with database</li>\r\n                                <li>Maintain the existing Web applications</li>\r\n                                <li>Create new database files and modify the existing ones</li>\r\n                                <li>Test applications for 100% precision</li>\r\n                                <li>Debug and trouble-shoot existing software</li>\r\n                                <li>Experience developing web pages to maintain data in a table format.</li>\r\n                                <li>Experience with resolving cross bowser issues</li>\r\n                                <li>Experience with Macromedia and Interdev</li>\r\n                                <li>Experience with Komodo (Perl editor)</li>\r\n                                <li>Experience developing Mathematics learning tools for up to grade 8</li>\r\n                                <li>Interaction with customers to satisfy needs, including email/telephone support</li>\r\n                                <li>Develop applications to send/receive files to/from others software vendors of our customers to update database</li>\r\n                            </ul>\r\n                </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\n\r\nexport default function Portfolio() {\r\n  return (\r\n    <div className=\"work\">\r\n      <h1>Portfolio</h1>\r\n      <div>\r\n          <span className=\"proj\" style={{backgroundImage:'url(\"/images/code_refactor.png\")'}}>\r\n                <label className=\"projlbl\" onClick={() => window.open('https://zahid267.github.io/code_refactor/')}>\r\n                    <strong>Code Refactor</strong><br/>\r\n                    <small>HTML/CSS</small>\r\n                </label>\r\n                <label className=\"projgit\" onClick={() => window.open('https://github.com/zahid267/code_refactor')}>\r\n                  <strong>Git Repo</strong>\r\n                </label>\r\n            </span>\r\n\r\n\r\n            <span className=\"proj\" style={{backgroundImage:'url(\"/images/Sports_Pad_Demo.gif\")'}}>\r\n                <label className=\"projlbl\" onClick={() => window.open('https://zahid267.github.io/SportsPad/')}>\r\n                    <strong>Sports Pad</strong><br />\r\n                    <small>Server Side APIs</small>\r\n                </label>\r\n                <label className=\"projgit\" onClick={() => window.open('https://github.com/zahid267/SportsPad')}>\r\n                <strong>Git Repo</strong>\r\n                </label>\r\n            </span>\r\n            \r\n            <span className=\"proj\" style={{backgroundImage:'url(\"/images/Note_Taker_Demo.gif\")'}}>\r\n                <label className=\"projlbl\" onClick={() => window.open('https://note-taker-zahid.herokuapp.com/')}>\r\n                    <strong>Note Taker</strong><br />\r\n                    <small>Express.js</small>\r\n                </label>\r\n                <label className=\"projgit\" onClick={() => window.open('https://github.com/zahid267/Note_Taker')}>\r\n                <strong>Git Repo</strong>\r\n                </label>\r\n            </span>\r\n            <span className=\"proj\" style={{backgroundImage:'url(\"/images/shop-list.png\")'}}>\r\n                <label className=\"projlbl\" onClick={() => window.open('https://murmuring-headland-20273.herokuapp.com/')}>\r\n                    <strong title=\"Project 2 - Marketing Revenue Tracker\">Revenue Tracker</strong><br />\r\n                    <small>Model View Controller</small>\r\n                </label>\r\n                <label className=\"projgit\" onClick={() => window.open('https://github.com/zahid267/Revenue-Tracker')}>\r\n                <strong title=\"Project 2 - Marketing Revenue Tracker\">Git Repo</strong>\r\n                </label>\r\n            </span>\r\n             \r\n            <span className=\"proj\" style={{backgroundImage:'url(\"/images/Fitness_Tracker.gif\")'}}>\r\n                <label className=\"projlbl\" onClick={() => window.open('https://degrassi-parliament-00065.herokuapp.com/')}>\r\n                    <strong >Workout Tracker</strong><br />\r\n                    <small>NoSQL - MongoDB</small>\r\n                </label>\r\n                <label className=\"projgit\" onClick={() => window.open('https://github.com/zahid267/workout_tracker')}>\r\n                <strong>Git Repo</strong>\r\n                </label>\r\n            </span>\r\n            <span className=\"proj\" style={{backgroundImage:'url(\"/images/Budget-Tracker-screenshot.png\")'}}>\r\n                <label className=\"projlbl\" onClick={() => window.open('https://fierce-fjord-72791.herokuapp.com/')}>\r\n                    <strong alt=\"Online/Offline Budget Trackers\">Budget Tracker</strong><br />\r\n                    <small title=\"Offline Installation\">PWA - NoSQL</small>\r\n                </label>\r\n                <label className=\"projgit\" onClick={() => window.open('https://github.com/zahid267/Budget-Tracker')}>\r\n                <strong title=\"Online/Offline Budget Trackers\">Git Repo</strong>\r\n                </label>\r\n            </span>\r\n                         \r\n                     \r\n      </div>\r\n      \r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport './App.css';\r\n\r\n// Here we import a helper function that will check if the email is valid\r\n//import { checkPassword, validateEmail } from './utils/helpers';\r\nimport {validateEmail } from './utils/helpers';\r\nfunction Contact() {\r\n  // Create state variables for the fields in the form\r\n  // We are also setting their initial values to an empty string\r\n  const [email, setEmail] = useState('');\r\n  const [userName, setUserName] = useState('');\r\n//  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    // Getting the value and name of the input which triggered the change\r\n    const { target } = e;\r\n    const inputType = target.name;\r\n    const inputValue = target.value;\r\n\r\n    // Based on the input type, we set the state of either email, username, and password\r\n    if (inputType === 'email') {\r\n      setEmail(inputValue);\r\n    } else if (inputType === 'userName') {\r\n      setUserName(inputValue);\r\n    } else if (inputType === 'message') {\r\n      setMessage(inputValue);\r\n    } else {\r\n     // setPassword(inputValue);\r\n    }\r\n    if(!inputValue){\r\n      alert(`${inputType} is required`);\r\n    }\r\n  };\r\n\r\n  const handleFormSubmit = (e) => {\r\n    // Preventing the default behavior of the form submit (which is to refresh the page)\r\n    e.preventDefault();\r\n\r\n    // First we check to see if the email is not valid or if the userName is empty. If so we set an error message to be displayed on the page.\r\n    if (!userName) {\r\n      setErrorMessage('Name is required');\r\n      // We want to exit out of this code block if something is wrong so that the user can correct it\r\n      return;\r\n      // Then we check to see if the password is not valid. If so, we set an error message regarding the password.\r\n    }\r\n    if (!email) {\r\n      setErrorMessage('Email address is required');\r\n      // We want to exit out of this code block if something is wrong so that the user can correct it\r\n      return;\r\n      // Then we check to see if the password is not valid. If so, we set an error message regarding the password.\r\n    }\r\n    if (!validateEmail(email)) {\r\n      setErrorMessage('Invalid Email address');\r\n      // We want to exit out of this code block if something is wrong so that the user can correct it\r\n      return;\r\n      // Then we check to see if the password is not valid. If so, we set an error message regarding the password.\r\n    }\r\n    \r\n    if (!message) {\r\n      setErrorMessage('Message text is required');\r\n      // We want to exit out of this code block if something is wrong so that the user can correct it\r\n      return;\r\n      // Then we check to see if the password is not valid. If so, we set an error message regarding the password.\r\n    }\r\n\r\n /*   if (!checkPassword(password)) {\r\n      setErrorMessage(\r\n        `Choose a more secure password for the account: ${userName}`\r\n      );\r\n      return;\r\n    }*/\r\n    alert(`Hello ${userName}`);\r\n\r\n    // If everything goes according to plan, we want to clear out the input after a successful registration.\r\n    setUserName('');\r\n //   setPassword('');\r\n    setEmail('');\r\n    setMessage('');\r\n    setErrorMessage('');\r\n  };\r\n\r\n  return (\r\n    \r\n    <div className=\"work\">\r\n      <h1>Contact</h1>\r\n      <div>\r\n      <h3>Hello {userName}</h3>\r\n      <form className=\"form\">\r\n      <input\r\n          value={userName}\r\n          name=\"userName\"\r\n          onChange={handleInputChange}\r\n          type=\"text\"\r\n          placeholder=\"Name\"\r\n        />\r\n        <input\r\n          value={email}\r\n          name=\"email\"\r\n          onChange={handleInputChange}\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n        />\r\n        <textarea name=\"message\" cols=\"80\" rows=\"8\" onChange={handleInputChange} placeholder=\"Message\">\r\n          {message}\r\n        </textarea>\r\n\r\n        <button type=\"button\" onClick={handleFormSubmit}>Submit</button>\r\n      </form>\r\n      {errorMessage && (\r\n        <div>\r\n          <p className=\"error-text\">{errorMessage}</p>\r\n        </div>\r\n      )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n","export function validateEmail(email) {\r\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(String(email).toLowerCase());\r\n}\r\n/*\r\nexport function checkPassword(input) {\r\n  const passw = /^[A-Za-z]\\w{7,14}$/;\r\n  if (input.match(passw)) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n*/","import React from 'react';\r\nimport './App.css';\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <div className=\"contact\">\r\n      \r\n      <div>\r\n                    <nav>\r\n                        <ul>\r\n                            <li><strong>Tel# : </strong>613-440-3070</li>\r\n                            <li><strong>Email : </strong>mrzahid@rogers.com</li>\r\n                            <li><a href=\"https://zahid267.github.io/prework-about-me/\">GitHub</a></li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n      \r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport NavTabs from './NavTabs';\r\nimport Resume from './pages/Resume';\r\nimport About from './pages/About';\r\nimport Portfolio from './pages/Portfolio';\r\nimport Contact from './pages/Contact';\r\nimport Footer from './pages/Footer';\r\n\r\nexport default function PortfolioContainer() {\r\n  const [currentPage, setCurrentPage] = useState('About');\r\n\r\n  // This method is checking to see what the value of `currentPage` is. Depending on the value of currentPage, we return the corresponding component to render.\r\n  const renderPage = () => {\r\n    \r\n    if (currentPage === 'About') {\r\n      return <About />;\r\n    }\r\n    if (currentPage === 'Portfolio') {\r\n      return <Portfolio />;\r\n    }\r\n    if (currentPage === 'Resume') {\r\n      return <Resume />;\r\n    }\r\n    return <Contact />;\r\n  };\r\n\r\n  const handlePageChange = (page) => setCurrentPage(page);\r\n\r\n  return (\r\n    <div>\r\n      {/* We are passing the currentPage from state and the function to update it */}\r\n      <NavTabs currentPage={currentPage} handlePageChange={handlePageChange} />\r\n      {/* Here we are calling the renderPage method which will return a component  */}\r\n      {renderPage()}\r\n\r\n      <Footer />;\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PortfolioContainer from \"./components/PortfolioContainer\";\r\n\r\nconst App = () => <PortfolioContainer />;\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}